<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/12/2019 8:35:23 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-GLKK0P8"
  DTS:CreatorName="DESKTOP-GLKK0P8\Adri"
  DTS:DTSID="{6D8EE9C8-959B-4D36-9A4E-02F16A6A94C5}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="1038"
  DTS:ObjectName="Part4"
  DTS:PackageType="5"
  DTS:VersionBuild="46"
  DTS:VersionGUID="{63E5CD3D-140B-431B-9C08-BBE7E77BA497}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Common input file manager]"
      DTS:CreationName="FLATFILE"
      DTS:Description="xt"
      DTS:DTSID="{152203BC-E44D-4775-9622-CFA0E8A8F0BC}"
      DTS:ObjectName="Common input file manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="65001"
          DTS:ConnectionString="D:\SSIS\most-common-words\data\input_text.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Text"
              DTS:DTSID="{79DE3760-A8E7-480E-B487-78FC6D7831A9}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Destination Excel manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{8811279F-92DA-4565-B87F-FBA7EE0F12AF}"
      DTS:ObjectName="Destination Excel manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=D:\SSIS\most-common-words\data\output_scores.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Error file manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{C249CFDB-1664-467B-B077-0719C6803D27}"
      DTS:ObjectName="Error file manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="65001"
          DTS:ConnectionString="D:\SSIS\most-common-words\data\error.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Text"
              DTS:DTSID="{1B3A5C65-899C-4926-861D-E8CB1C325F1C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorCode"
              DTS:DTSID="{7A88F855-E419-4E35-B2E8-7EB895B27B8C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ErrorColumn"
              DTS:DTSID="{5B33DD42-9A84-470A-B5E2-B2A6BAA3FB00}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Source files manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{14ADDF20-C10C-4590-A3DD-60896077F682}"
      DTS:ObjectName="Source files manager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::varFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="65001">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="908"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Text"
              DTS:DTSID="{63B09ECF-2E8E-4B8B-8260-62AB141EA532}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2C74ED40-85A5-43A5-85BD-F7B31F3BDCD5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Delete common input file"
      DTS:CreationName="Microsoft.FileSystemTask"
      DTS:Description="File System Task"
      DTS:DTSID="{57C7B450-BA33-43E3-BE95-68A1B2CF961F}"
      DTS:ExecutableType="Microsoft.FileSystemTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete common input file"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <FileSystemData
          TaskOperationType="DeleteFile"
          TaskSourcePath="{152203BC-E44D-4775-9622-CFA0E8A8F0BC}" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach for files in folder"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{84B7080E-5FC7-4A67-B3CB-4763F9516819}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach for files in folder">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{37D0B219-80E0-4B36-ADD1-CE258C68F9F3}"
        DTS:ObjectName="{37D0B219-80E0-4B36-ADD1-CE258C68F9F3}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="D:\SSIS\most-common-words\data\texts" />
            <FEFEProperty
              FileSpec="*.txt" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach for files in folder\File reader"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{42100936-5A58-4CEF-996F-4B50CAB83AEC}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="File reader"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach for files in folder\File reader\Common input file destination"
                  componentClassID="Microsoft.FlatFileDestination"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Common input file destination">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">false</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                    <property
                      dataType="System.Boolean"
                      description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                      name="EscapeQualifier">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach for files in folder\File reader\Common input file destination.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Common input file manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Common input file manager]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach for files in folder\File reader\Common input file destination.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach for files in folder\File reader\Common input file destination.Inputs[Flat File Destination Input].Columns[Text]"
                          cachedDataType="wstr"
                          cachedLength="908"
                          cachedName="Text"
                          externalMetadataColumnId="Package\Foreach for files in folder\File reader\Common input file destination.Inputs[Flat File Destination Input].ExternalColumns[Text]"
                          lineageId="Package\Foreach for files in folder\File reader\Lyrics source files.Outputs[Flat File Source Output].Columns[Text]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach for files in folder\File reader\Common input file destination.Inputs[Flat File Destination Input].ExternalColumns[Text]"
                          dataType="wstr"
                          length="100"
                          name="Text" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach for files in folder\File reader\Lyrics source files"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="2057"
                  name="Lyrics source files"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach for files in folder\File reader\Lyrics source files.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Source files manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Source files manager]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach for files in folder\File reader\Lyrics source files.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach for files in folder\File reader\Lyrics source files.Outputs[Flat File Source Output].Columns[Text]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach for files in folder\File reader\Lyrics source files.Outputs[Flat File Source Output].ExternalColumns[Text]"
                          length="908"
                          lineageId="Package\Foreach for files in folder\File reader\Lyrics source files.Outputs[Flat File Source Output].Columns[Text]"
                          name="Text"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach for files in folder\File reader\Lyrics source files.Outputs[Flat File Source Output].ExternalColumns[Text]"
                          dataType="wstr"
                          length="908"
                          name="Text" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach for files in folder\File reader\Lyrics source files.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach for files in folder\File reader\Lyrics source files.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="65001"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach for files in folder\File reader\Lyrics source files.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach for files in folder\File reader\Lyrics source files.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach for files in folder\File reader\Lyrics source files.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach for files in folder\File reader\Lyrics source files.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach for files in folder\File reader\Lyrics source files.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach for files in folder\File reader.Paths[Flat File Source Output]"
                  endId="Package\Foreach for files in folder\File reader\Common input file destination.Inputs[Flat File Destination Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach for files in folder\File reader\Lyrics source files.Outputs[Flat File Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{880D4A8F-B390-4567-AFA7-CDD4413BCF77}"
          DTS:ObjectName="{880D4A8F-B390-4567-AFA7-CDD4413BCF77}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::varFileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Lyrics analyzing"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{1FC00F65-1B77-44E8-A91F-4B8D8B6A6D5E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Lyrics analyzing"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Lyrics analyzing\Error file destination"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="1033"
              name="Error file destination">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Lyrics analyzing\Error file destination.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Error file manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Error file manager]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Lyrics analyzing\Error file destination.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Lyrics analyzing\Error file destination.Inputs[Flat File Destination Input].Columns[Text]"
                      cachedDataType="wstr"
                      cachedLength="908"
                      cachedName="Text"
                      externalMetadataColumnId="Package\Lyrics analyzing\Error file destination.Inputs[Flat File Destination Input].ExternalColumns[Text]"
                      lineageId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Output].Columns[Text]" />
                    <inputColumn
                      refId="Package\Lyrics analyzing\Error file destination.Inputs[Flat File Destination Input].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      externalMetadataColumnId="Package\Lyrics analyzing\Error file destination.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      lineageId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Lyrics analyzing\Error file destination.Inputs[Flat File Destination Input].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      externalMetadataColumnId="Package\Lyrics analyzing\Error file destination.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      lineageId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Error Output].Columns[ErrorColumn]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Lyrics analyzing\Error file destination.Inputs[Flat File Destination Input].ExternalColumns[Text]"
                      dataType="wstr"
                      length="100"
                      name="Text" />
                    <externalMetadataColumn
                      refId="Package\Lyrics analyzing\Error file destination.Inputs[Flat File Destination Input].ExternalColumns[ErrorCode]"
                      dataType="i4"
                      name="ErrorCode" />
                    <externalMetadataColumn
                      refId="Package\Lyrics analyzing\Error file destination.Inputs[Flat File Destination Input].ExternalColumns[ErrorColumn]"
                      dataType="i4"
                      name="ErrorColumn" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Lyrics analyzing\Filter chorus and liedtext out"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Filter chorus and liedtext out"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Lyrics analyzing\Filter chorus and liedtext out.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Lyrics analyzing\Filter chorus and liedtext out.Inputs[Conditional Split Input].Columns[Text]"
                      cachedDataType="wstr"
                      cachedLength="908"
                      cachedName="Text"
                      lineageId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Output].Columns[Text]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Lyrics analyzing\Filter chorus and liedtext out.Outputs[Text]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Text"
                  synchronousInputId="Package\Lyrics analyzing\Filter chorus and liedtext out.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">([FINDSTRING](#{Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Output].Columns[Text]},"chorus",1) == 0) &amp;&amp; ([FINDSTRING](#{Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Output].Columns[Text]},"Chorus",1) == 0) &amp;&amp; ([FINDSTRING](#{Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Output].Columns[Text]},"Liedtext",1) == 0)</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">(FINDSTRING(Text,"chorus",1) == 0) &amp;&amp; (FINDSTRING(Text,"Chorus",1) == 0) &amp;&amp; (FINDSTRING(Text,"Liedtext",1) == 0)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Lyrics analyzing\Filter chorus and liedtext out.Outputs[Chorus and liedtext]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Chorus and liedtext"
                  synchronousInputId="Package\Lyrics analyzing\Filter chorus and liedtext out.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Lyrics analyzing\Filter chorus and liedtext out.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Lyrics analyzing\Filter chorus and liedtext out.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Lyrics analyzing\Filter chorus and liedtext out.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Lyrics analyzing\Filter chorus and liedtext out.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Lyrics analyzing\Filter chorus and liedtext out.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Lyrics analyzing\Filter chorus and liedtext out.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Lyrics analyzing\Lyrics input file source"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Lyrics input file source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Lyrics analyzing\Lyrics input file source.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Common input file manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Common input file manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Output].Columns[Text]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Output].ExternalColumns[Text]"
                      length="908"
                      lineageId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Output].Columns[Text]"
                      name="Text"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Output].ExternalColumns[Text]"
                      dataType="wstr"
                      length="100"
                      name="Text" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1250"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Lyrics analyzing\Lyrics scores Excel destination"
              componentClassID="Microsoft.ExcelDestination"
              contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Excel Destination"
              name="Lyrics scores Excel destination"
              usesDispositions="true">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Lyrics_scores_Excel_destination$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Lyrics analyzing\Lyrics scores Excel destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Destination Excel manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Destination Excel manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Lyrics analyzing\Lyrics scores Excel destination.Inputs[Excel Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Excel Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Lyrics analyzing\Lyrics scores Excel destination.Inputs[Excel Destination Input].Columns[Term]"
                      cachedDataType="wstr"
                      cachedLength="128"
                      cachedName="Term"
                      externalMetadataColumnId="Package\Lyrics analyzing\Lyrics scores Excel destination.Inputs[Excel Destination Input].ExternalColumns[Term]"
                      lineageId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Output].Columns[Term]" />
                    <inputColumn
                      refId="Package\Lyrics analyzing\Lyrics scores Excel destination.Inputs[Excel Destination Input].Columns[Score]"
                      cachedDataType="r8"
                      cachedName="Score"
                      externalMetadataColumnId="Package\Lyrics analyzing\Lyrics scores Excel destination.Inputs[Excel Destination Input].ExternalColumns[Score]"
                      lineageId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Output].Columns[Score]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Lyrics analyzing\Lyrics scores Excel destination.Inputs[Excel Destination Input].ExternalColumns[Term]"
                      dataType="wstr"
                      length="255"
                      name="Term" />
                    <externalMetadataColumn
                      refId="Package\Lyrics analyzing\Lyrics scores Excel destination.Inputs[Excel Destination Input].ExternalColumns[Score]"
                      dataType="wstr"
                      length="255"
                      name="Score" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Lyrics analyzing\Lyrics scores Excel destination.Outputs[Excel Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Excel Destination Error Output"
                  synchronousInputId="Package\Lyrics analyzing\Lyrics scores Excel destination.Inputs[Excel Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Lyrics analyzing\Lyrics scores Excel destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Lyrics analyzing\Lyrics scores Excel destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Lyrics analyzing\Lyrics scores Excel destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Lyrics analyzing\Lyrics scores Excel destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Lyrics analyzing\Term extraction"
              componentClassID="Microsoft.TermExtraction"
              description="Extracts frequently used English-only terms from an input data flow. Terms and their corresponding score are written to output data columns. For example, search a group of documents to discover commonly-used terms. Note: an English dictionary is included with Integration Services."
              name="Term extraction"
              usesDispositions="true"
              version="3">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether to use exclusion terms."
                  name="NeedReferenceData">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the reference table containing the exclusion terms."
                  name="OutTermTable"></property>
                <property
                  dataType="System.String"
                  description="Specifies the column containing the exclusion terms. The column must be in the table specified in the property OutTermTable."
                  name="OutTermColumn"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of terms to extract. 0 specifies noun, 1 specifies noun phrase, and 2 specifies noun and noun phrase."
                  name="WordOrPhrase"
                  typeConverter="WordOrPhrase">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies what kind of score to be associated with a term. 0 means using the frequency of a term as the score; 1 means using the TFIDF of a term as the score."
                  name="ScoreType"
                  typeConverter="ScoreType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the frequency threshold above which a term is extracted."
                  name="FrequencyThreshold">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of words in a term."
                  name="MaxLengthOfTerm">12</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the Term Extraction process is case sensitive."
                  name="IsCaseSensitive">false</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Lyrics analyzing\Term extraction.Inputs[Term Extraction Input]"
                  description="Input to Term Extraction Transformation"
                  name="Term Extraction Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Lyrics analyzing\Term extraction.Inputs[Term Extraction Input].Columns[Text]"
                      cachedDataType="wstr"
                      cachedLength="908"
                      cachedName="Text"
                      lineageId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Output].Columns[Text]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Output]"
                  description="Output from Term Extraction Transformation"
                  errorOrTruncationOperation="Term Extraction"
                  errorRowDisposition="RedirectRow"
                  name="Term Extraction Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Output].Columns[Term]"
                      dataType="wstr"
                      description="Output Column from Term Extraction Transform"
                      length="128"
                      lineageId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Output].Columns[Term]"
                      name="Term" />
                    <outputColumn
                      refId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Output].Columns[Score]"
                      dataType="r8"
                      description="Score"
                      lineageId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Output].Columns[Score]"
                      name="Score" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Error Output]"
                  description="Error Output from Term Extraction Transform"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Term Extraction Error Output"
                  synchronousInputId="Package\Lyrics analyzing\Term extraction.Inputs[Term Extraction Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Lyrics analyzing.Paths[Flat File Source Output]"
              endId="Package\Lyrics analyzing\Filter chorus and liedtext out.Inputs[Conditional Split Input]"
              name="Flat File Source Output"
              startId="Package\Lyrics analyzing\Lyrics input file source.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Lyrics analyzing.Paths[Term Extraction Error Output]"
              endId="Package\Lyrics analyzing\Error file destination.Inputs[Flat File Destination Input]"
              name="Term Extraction Error Output"
              startId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Error Output]" />
            <path
              refId="Package\Lyrics analyzing.Paths[Term Extraction Output]"
              endId="Package\Lyrics analyzing\Lyrics scores Excel destination.Inputs[Excel Destination Input]"
              name="Term Extraction Output"
              startId="Package\Lyrics analyzing\Term extraction.Outputs[Term Extraction Output]" />
            <path
              refId="Package\Lyrics analyzing.Paths[Text]"
              endId="Package\Lyrics analyzing\Term extraction.Inputs[Term Extraction Input]"
              name="Text"
              startId="Package\Lyrics analyzing\Filter chorus and liedtext out.Outputs[Text]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{0C600314-9015-4BCC-A78D-C9D647570FA7}"
      DTS:From="Package\Foreach for files in folder"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Lyrics analyzing" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{CC90E63B-5EEC-4A64-A932-6AA068F10B0C}"
      DTS:From="Package\Lyrics analyzing"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Delete common input file" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="195,42"
          Id="Package\Delete common input file"
          TopLeft="101,350" />
        <NodeLayout
          Size="132,42"
          Id="Package\Foreach for files in folder\File reader"
          TopLeft="25.5,20.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="195,87"
          Size="195,130"
          Id="Package\Foreach for files in folder"
          TopLeft="106.5,62" />
        <NodeLayout
          Size="195,42"
          Id="Package\Lyrics analyzing"
          TopLeft="106.5,248" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="204,192">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="201.25,290">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach for files in folder\File reader">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="224,42"
          Id="Package\Foreach for files in folder\File reader\Lyrics source files"
          TopLeft="165,46" />
        <NodeLayout
          Size="224,42"
          Id="Package\Foreach for files in folder\File reader\Common input file destination"
          TopLeft="165,156" />
        <EdgeLayout
          Id="Package\Foreach for files in folder\File reader.Paths[Flat File Source Output]"
          TopLeft="277,88">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,68"
              Start="0,0"
              End="0,60.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,60.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Lyrics analyzing">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="229,42"
          Id="Package\Lyrics analyzing\Term extraction"
          TopLeft="226,199.666666666667" />
        <NodeLayout
          Size="229,42"
          Id="Package\Lyrics analyzing\Filter chorus and liedtext out"
          TopLeft="226,112.333333333333" />
        <NodeLayout
          Size="229,42"
          Id="Package\Lyrics analyzing\Lyrics input file source"
          TopLeft="226,25" />
        <NodeLayout
          Size="229,42"
          Id="Package\Lyrics analyzing\Error file destination"
          TopLeft="602,200" />
        <EdgeLayout
          Id="Package\Lyrics analyzing.Paths[Text]"
          TopLeft="340.5,154.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.333333333334"
              Start="0,0"
              End="0,37.833333333334">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.833333333334" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-10.69248046875,14.217936197917,21.3849609375,9.3974609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Lyrics analyzing.Paths[Term Extraction Error Output]"
          TopLeft="455,220.833333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="147,0"
              Start="0,0"
              End="139.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="139.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="4.36251953125,5,130.7749609375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Lyrics analyzing.Paths[Flat File Source Output]"
          TopLeft="340.5,67">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.333333333333"
              Start="0,0"
              End="0,37.833333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.833333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="229,42"
          Id="Package\Lyrics analyzing\Lyrics scores Excel destination"
          TopLeft="226,293" />
        <EdgeLayout
          Id="Package\Lyrics analyzing.Paths[Term Extraction Output]"
          TopLeft="340.5,241.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51.333333333333"
              Start="0,0"
              End="0,43.833333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.833333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Lyrics analyzing\Lyrics scores Excel destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>